{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","pageNumbers","className","classNames","disabled","href","onClick","map","number","active","items","App","useState","setCurrentPage","setPerPage","length","showItems","values","showValues","slice","visibleItems","itemsFromTo","firstNumber","lastNumber","id","value","onChange","el","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAcd,EAAW,EAAGW,GAElC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBR,IAFd,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACPT,EAAaD,EAAc,IAN/B,oBAaDK,EAAYM,KAAI,SAAAC,GAAM,OACrB,oBAAIN,UAAWC,IACb,YACA,CAAEM,OAAQb,IAAgBY,IAF5B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHE,IAAWZ,GACbC,EAAaW,IANnB,SAUGA,SAKP,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACPT,EAAaD,EAAc,IAN/B,wBC7DFc,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACMhB,EAAQC,KAAKC,KAAKU,EAAMK,OAASpB,GAMjCqB,EAAY,SAACC,GACjB,IAAIC,EAAaD,EAAOE,MAAM,EAAGvB,EAAc,GAa/C,OAXIA,EAAcE,IAChBoB,EAAaD,EAAOE,OACjBvB,EAAc,GAAKD,EACpBA,EAAUC,IAIVA,IAAgBE,IAClBoB,EAAaD,EAAOE,OAAOvB,EAAc,GAAKD,EAASsB,EAAOF,SAGzDG,GAGHE,EAAeJ,EAAUN,GACzBW,EAAcL,EAAU7B,EAAW,EAAGuB,EAAMK,SAC5CO,EAAcD,EAAY,GAC1BE,EAAaF,EAAYA,EAAYN,OAAS,GAEpD,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiC0B,EADjC,cACkDC,EADlD,eACmEb,EAAMK,OADzE,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAO9B,EACP+B,SAAU,SAACC,GACTb,EAAWc,OAAOD,EAAGE,OAAOJ,QAC5BZ,EAAe,IAPnB,UAUE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOgB,EAAMK,OACbpB,QAASA,EACTC,YAAaA,EACbC,aA9De,SAACW,GACpBK,EAAeL,MAgEb,6BACGY,EAAab,KAAI,SAAAwB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.488e1d18.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, pages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            onPageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(number => (\n        <li className={classNames(\n          'page-item',\n          { active: currentPage === number },\n        )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => {\n              if (number !== currentPage) {\n                onPageChange(number);\n              }\n            }}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === pages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages}\n          onClick={() => {\n            onPageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const pages = Math.ceil(items.length / perPage);\n\n  const onPageChange = (number: number) => {\n    setCurrentPage(number);\n  };\n\n  const showItems = (values: string[] | number[]) => {\n    let showValues = values.slice(0, currentPage - 1);\n\n    if (currentPage < pages) {\n      showValues = values.slice(\n        (currentPage - 1) * perPage,\n        perPage * currentPage,\n      );\n    }\n\n    if (currentPage === pages) {\n      showValues = values.slice((currentPage - 1) * perPage, values.length);\n    }\n\n    return showValues;\n  };\n\n  const visibleItems = showItems(items);\n  const itemsFromTo = showItems(getNumbers(1, items.length));\n  const firstNumber = itemsFromTo[0];\n  const lastNumber = itemsFromTo[itemsFromTo.length - 1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstNumber} - ${lastNumber} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(el) => {\n              setPerPage(Number(el.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}